package com.wincom.mstar.domain;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class CDeviceExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table nfjd502.dbo.CDevice
     *
     * @mbggenerated Thu Mar 02 11:23:21 CST 2017
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table nfjd502.dbo.CDevice
     *
     * @mbggenerated Thu Mar 02 11:23:21 CST 2017
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table nfjd502.dbo.CDevice
     *
     * @mbggenerated Thu Mar 02 11:23:21 CST 2017
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table nfjd502.dbo.CDevice
     *
     * @mbggenerated Thu Mar 02 11:23:21 CST 2017
     */
    public CDeviceExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table nfjd502.dbo.CDevice
     *
     * @mbggenerated Thu Mar 02 11:23:21 CST 2017
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table nfjd502.dbo.CDevice
     *
     * @mbggenerated Thu Mar 02 11:23:21 CST 2017
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table nfjd502.dbo.CDevice
     *
     * @mbggenerated Thu Mar 02 11:23:21 CST 2017
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table nfjd502.dbo.CDevice
     *
     * @mbggenerated Thu Mar 02 11:23:21 CST 2017
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table nfjd502.dbo.CDevice
     *
     * @mbggenerated Thu Mar 02 11:23:21 CST 2017
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table nfjd502.dbo.CDevice
     *
     * @mbggenerated Thu Mar 02 11:23:21 CST 2017
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table nfjd502.dbo.CDevice
     *
     * @mbggenerated Thu Mar 02 11:23:21 CST 2017
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table nfjd502.dbo.CDevice
     *
     * @mbggenerated Thu Mar 02 11:23:21 CST 2017
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table nfjd502.dbo.CDevice
     *
     * @mbggenerated Thu Mar 02 11:23:21 CST 2017
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table nfjd502.dbo.CDevice
     *
     * @mbggenerated Thu Mar 02 11:23:21 CST 2017
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table nfjd502.dbo.CDevice
     *
     * @mbggenerated Thu Mar 02 11:23:21 CST 2017
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andDeviceidIsNull() {
            addCriterion("DeviceID is null");
            return (Criteria) this;
        }

        public Criteria andDeviceidIsNotNull() {
            addCriterion("DeviceID is not null");
            return (Criteria) this;
        }

        public Criteria andDeviceidEqualTo(Integer value) {
            addCriterion("DeviceID =", value, "deviceid");
            return (Criteria) this;
        }

        public Criteria andDeviceidNotEqualTo(Integer value) {
            addCriterion("DeviceID <>", value, "deviceid");
            return (Criteria) this;
        }

        public Criteria andDeviceidGreaterThan(Integer value) {
            addCriterion("DeviceID >", value, "deviceid");
            return (Criteria) this;
        }

        public Criteria andDeviceidGreaterThanOrEqualTo(Integer value) {
            addCriterion("DeviceID >=", value, "deviceid");
            return (Criteria) this;
        }

        public Criteria andDeviceidLessThan(Integer value) {
            addCriterion("DeviceID <", value, "deviceid");
            return (Criteria) this;
        }

        public Criteria andDeviceidLessThanOrEqualTo(Integer value) {
            addCriterion("DeviceID <=", value, "deviceid");
            return (Criteria) this;
        }

        public Criteria andDeviceidIn(List<Integer> values) {
            addCriterion("DeviceID in", values, "deviceid");
            return (Criteria) this;
        }

        public Criteria andDeviceidNotIn(List<Integer> values) {
            addCriterion("DeviceID not in", values, "deviceid");
            return (Criteria) this;
        }

        public Criteria andDeviceidBetween(Integer value1, Integer value2) {
            addCriterion("DeviceID between", value1, value2, "deviceid");
            return (Criteria) this;
        }

        public Criteria andDeviceidNotBetween(Integer value1, Integer value2) {
            addCriterion("DeviceID not between", value1, value2, "deviceid");
            return (Criteria) this;
        }

        public Criteria andDevicetypeidIsNull() {
            addCriterion("DeviceTypeID is null");
            return (Criteria) this;
        }

        public Criteria andDevicetypeidIsNotNull() {
            addCriterion("DeviceTypeID is not null");
            return (Criteria) this;
        }

        public Criteria andDevicetypeidEqualTo(Integer value) {
            addCriterion("DeviceTypeID =", value, "devicetypeid");
            return (Criteria) this;
        }

        public Criteria andDevicetypeidNotEqualTo(Integer value) {
            addCriterion("DeviceTypeID <>", value, "devicetypeid");
            return (Criteria) this;
        }

        public Criteria andDevicetypeidGreaterThan(Integer value) {
            addCriterion("DeviceTypeID >", value, "devicetypeid");
            return (Criteria) this;
        }

        public Criteria andDevicetypeidGreaterThanOrEqualTo(Integer value) {
            addCriterion("DeviceTypeID >=", value, "devicetypeid");
            return (Criteria) this;
        }

        public Criteria andDevicetypeidLessThan(Integer value) {
            addCriterion("DeviceTypeID <", value, "devicetypeid");
            return (Criteria) this;
        }

        public Criteria andDevicetypeidLessThanOrEqualTo(Integer value) {
            addCriterion("DeviceTypeID <=", value, "devicetypeid");
            return (Criteria) this;
        }

        public Criteria andDevicetypeidIn(List<Integer> values) {
            addCriterion("DeviceTypeID in", values, "devicetypeid");
            return (Criteria) this;
        }

        public Criteria andDevicetypeidNotIn(List<Integer> values) {
            addCriterion("DeviceTypeID not in", values, "devicetypeid");
            return (Criteria) this;
        }

        public Criteria andDevicetypeidBetween(Integer value1, Integer value2) {
            addCriterion("DeviceTypeID between", value1, value2, "devicetypeid");
            return (Criteria) this;
        }

        public Criteria andDevicetypeidNotBetween(Integer value1, Integer value2) {
            addCriterion("DeviceTypeID not between", value1, value2, "devicetypeid");
            return (Criteria) this;
        }

        public Criteria andModelidIsNull() {
            addCriterion("ModelID is null");
            return (Criteria) this;
        }

        public Criteria andModelidIsNotNull() {
            addCriterion("ModelID is not null");
            return (Criteria) this;
        }

        public Criteria andModelidEqualTo(Integer value) {
            addCriterion("ModelID =", value, "modelid");
            return (Criteria) this;
        }

        public Criteria andModelidNotEqualTo(Integer value) {
            addCriterion("ModelID <>", value, "modelid");
            return (Criteria) this;
        }

        public Criteria andModelidGreaterThan(Integer value) {
            addCriterion("ModelID >", value, "modelid");
            return (Criteria) this;
        }

        public Criteria andModelidGreaterThanOrEqualTo(Integer value) {
            addCriterion("ModelID >=", value, "modelid");
            return (Criteria) this;
        }

        public Criteria andModelidLessThan(Integer value) {
            addCriterion("ModelID <", value, "modelid");
            return (Criteria) this;
        }

        public Criteria andModelidLessThanOrEqualTo(Integer value) {
            addCriterion("ModelID <=", value, "modelid");
            return (Criteria) this;
        }

        public Criteria andModelidIn(List<Integer> values) {
            addCriterion("ModelID in", values, "modelid");
            return (Criteria) this;
        }

        public Criteria andModelidNotIn(List<Integer> values) {
            addCriterion("ModelID not in", values, "modelid");
            return (Criteria) this;
        }

        public Criteria andModelidBetween(Integer value1, Integer value2) {
            addCriterion("ModelID between", value1, value2, "modelid");
            return (Criteria) this;
        }

        public Criteria andModelidNotBetween(Integer value1, Integer value2) {
            addCriterion("ModelID not between", value1, value2, "modelid");
            return (Criteria) this;
        }

        public Criteria andMountplaceidIsNull() {
            addCriterion("MountPlaceID is null");
            return (Criteria) this;
        }

        public Criteria andMountplaceidIsNotNull() {
            addCriterion("MountPlaceID is not null");
            return (Criteria) this;
        }

        public Criteria andMountplaceidEqualTo(Integer value) {
            addCriterion("MountPlaceID =", value, "mountplaceid");
            return (Criteria) this;
        }

        public Criteria andMountplaceidNotEqualTo(Integer value) {
            addCriterion("MountPlaceID <>", value, "mountplaceid");
            return (Criteria) this;
        }

        public Criteria andMountplaceidGreaterThan(Integer value) {
            addCriterion("MountPlaceID >", value, "mountplaceid");
            return (Criteria) this;
        }

        public Criteria andMountplaceidGreaterThanOrEqualTo(Integer value) {
            addCriterion("MountPlaceID >=", value, "mountplaceid");
            return (Criteria) this;
        }

        public Criteria andMountplaceidLessThan(Integer value) {
            addCriterion("MountPlaceID <", value, "mountplaceid");
            return (Criteria) this;
        }

        public Criteria andMountplaceidLessThanOrEqualTo(Integer value) {
            addCriterion("MountPlaceID <=", value, "mountplaceid");
            return (Criteria) this;
        }

        public Criteria andMountplaceidIn(List<Integer> values) {
            addCriterion("MountPlaceID in", values, "mountplaceid");
            return (Criteria) this;
        }

        public Criteria andMountplaceidNotIn(List<Integer> values) {
            addCriterion("MountPlaceID not in", values, "mountplaceid");
            return (Criteria) this;
        }

        public Criteria andMountplaceidBetween(Integer value1, Integer value2) {
            addCriterion("MountPlaceID between", value1, value2, "mountplaceid");
            return (Criteria) this;
        }

        public Criteria andMountplaceidNotBetween(Integer value1, Integer value2) {
            addCriterion("MountPlaceID not between", value1, value2, "mountplaceid");
            return (Criteria) this;
        }

        public Criteria andStartusedateIsNull() {
            addCriterion("StartUseDate is null");
            return (Criteria) this;
        }

        public Criteria andStartusedateIsNotNull() {
            addCriterion("StartUseDate is not null");
            return (Criteria) this;
        }

        public Criteria andStartusedateEqualTo(Date value) {
            addCriterion("StartUseDate =", value, "startusedate");
            return (Criteria) this;
        }

        public Criteria andStartusedateNotEqualTo(Date value) {
            addCriterion("StartUseDate <>", value, "startusedate");
            return (Criteria) this;
        }

        public Criteria andStartusedateGreaterThan(Date value) {
            addCriterion("StartUseDate >", value, "startusedate");
            return (Criteria) this;
        }

        public Criteria andStartusedateGreaterThanOrEqualTo(Date value) {
            addCriterion("StartUseDate >=", value, "startusedate");
            return (Criteria) this;
        }

        public Criteria andStartusedateLessThan(Date value) {
            addCriterion("StartUseDate <", value, "startusedate");
            return (Criteria) this;
        }

        public Criteria andStartusedateLessThanOrEqualTo(Date value) {
            addCriterion("StartUseDate <=", value, "startusedate");
            return (Criteria) this;
        }

        public Criteria andStartusedateIn(List<Date> values) {
            addCriterion("StartUseDate in", values, "startusedate");
            return (Criteria) this;
        }

        public Criteria andStartusedateNotIn(List<Date> values) {
            addCriterion("StartUseDate not in", values, "startusedate");
            return (Criteria) this;
        }

        public Criteria andStartusedateBetween(Date value1, Date value2) {
            addCriterion("StartUseDate between", value1, value2, "startusedate");
            return (Criteria) this;
        }

        public Criteria andStartusedateNotBetween(Date value1, Date value2) {
            addCriterion("StartUseDate not between", value1, value2, "startusedate");
            return (Criteria) this;
        }

        public Criteria andPardeviceidIsNull() {
            addCriterion("ParDeviceID is null");
            return (Criteria) this;
        }

        public Criteria andPardeviceidIsNotNull() {
            addCriterion("ParDeviceID is not null");
            return (Criteria) this;
        }

        public Criteria andPardeviceidEqualTo(Integer value) {
            addCriterion("ParDeviceID =", value, "pardeviceid");
            return (Criteria) this;
        }

        public Criteria andPardeviceidNotEqualTo(Integer value) {
            addCriterion("ParDeviceID <>", value, "pardeviceid");
            return (Criteria) this;
        }

        public Criteria andPardeviceidGreaterThan(Integer value) {
            addCriterion("ParDeviceID >", value, "pardeviceid");
            return (Criteria) this;
        }

        public Criteria andPardeviceidGreaterThanOrEqualTo(Integer value) {
            addCriterion("ParDeviceID >=", value, "pardeviceid");
            return (Criteria) this;
        }

        public Criteria andPardeviceidLessThan(Integer value) {
            addCriterion("ParDeviceID <", value, "pardeviceid");
            return (Criteria) this;
        }

        public Criteria andPardeviceidLessThanOrEqualTo(Integer value) {
            addCriterion("ParDeviceID <=", value, "pardeviceid");
            return (Criteria) this;
        }

        public Criteria andPardeviceidIn(List<Integer> values) {
            addCriterion("ParDeviceID in", values, "pardeviceid");
            return (Criteria) this;
        }

        public Criteria andPardeviceidNotIn(List<Integer> values) {
            addCriterion("ParDeviceID not in", values, "pardeviceid");
            return (Criteria) this;
        }

        public Criteria andPardeviceidBetween(Integer value1, Integer value2) {
            addCriterion("ParDeviceID between", value1, value2, "pardeviceid");
            return (Criteria) this;
        }

        public Criteria andPardeviceidNotBetween(Integer value1, Integer value2) {
            addCriterion("ParDeviceID not between", value1, value2, "pardeviceid");
            return (Criteria) this;
        }

        public Criteria andUsestatusIsNull() {
            addCriterion("UseStatus is null");
            return (Criteria) this;
        }

        public Criteria andUsestatusIsNotNull() {
            addCriterion("UseStatus is not null");
            return (Criteria) this;
        }

        public Criteria andUsestatusEqualTo(Boolean value) {
            addCriterion("UseStatus =", value, "usestatus");
            return (Criteria) this;
        }

        public Criteria andUsestatusNotEqualTo(Boolean value) {
            addCriterion("UseStatus <>", value, "usestatus");
            return (Criteria) this;
        }

        public Criteria andUsestatusGreaterThan(Boolean value) {
            addCriterion("UseStatus >", value, "usestatus");
            return (Criteria) this;
        }

        public Criteria andUsestatusGreaterThanOrEqualTo(Boolean value) {
            addCriterion("UseStatus >=", value, "usestatus");
            return (Criteria) this;
        }

        public Criteria andUsestatusLessThan(Boolean value) {
            addCriterion("UseStatus <", value, "usestatus");
            return (Criteria) this;
        }

        public Criteria andUsestatusLessThanOrEqualTo(Boolean value) {
            addCriterion("UseStatus <=", value, "usestatus");
            return (Criteria) this;
        }

        public Criteria andUsestatusIn(List<Boolean> values) {
            addCriterion("UseStatus in", values, "usestatus");
            return (Criteria) this;
        }

        public Criteria andUsestatusNotIn(List<Boolean> values) {
            addCriterion("UseStatus not in", values, "usestatus");
            return (Criteria) this;
        }

        public Criteria andUsestatusBetween(Boolean value1, Boolean value2) {
            addCriterion("UseStatus between", value1, value2, "usestatus");
            return (Criteria) this;
        }

        public Criteria andUsestatusNotBetween(Boolean value1, Boolean value2) {
            addCriterion("UseStatus not between", value1, value2, "usestatus");
            return (Criteria) this;
        }

        public Criteria andRatingIsNull() {
            addCriterion("Rating is null");
            return (Criteria) this;
        }

        public Criteria andRatingIsNotNull() {
            addCriterion("Rating is not null");
            return (Criteria) this;
        }

        public Criteria andRatingEqualTo(Double value) {
            addCriterion("Rating =", value, "rating");
            return (Criteria) this;
        }

        public Criteria andRatingNotEqualTo(Double value) {
            addCriterion("Rating <>", value, "rating");
            return (Criteria) this;
        }

        public Criteria andRatingGreaterThan(Double value) {
            addCriterion("Rating >", value, "rating");
            return (Criteria) this;
        }

        public Criteria andRatingGreaterThanOrEqualTo(Double value) {
            addCriterion("Rating >=", value, "rating");
            return (Criteria) this;
        }

        public Criteria andRatingLessThan(Double value) {
            addCriterion("Rating <", value, "rating");
            return (Criteria) this;
        }

        public Criteria andRatingLessThanOrEqualTo(Double value) {
            addCriterion("Rating <=", value, "rating");
            return (Criteria) this;
        }

        public Criteria andRatingIn(List<Double> values) {
            addCriterion("Rating in", values, "rating");
            return (Criteria) this;
        }

        public Criteria andRatingNotIn(List<Double> values) {
            addCriterion("Rating not in", values, "rating");
            return (Criteria) this;
        }

        public Criteria andRatingBetween(Double value1, Double value2) {
            addCriterion("Rating between", value1, value2, "rating");
            return (Criteria) this;
        }

        public Criteria andRatingNotBetween(Double value1, Double value2) {
            addCriterion("Rating not between", value1, value2, "rating");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table nfjd502.dbo.CDevice
     *
     * @mbggenerated do_not_delete_during_merge Thu Mar 02 11:23:21 CST 2017
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table nfjd502.dbo.CDevice
     *
     * @mbggenerated Thu Mar 02 11:23:21 CST 2017
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}