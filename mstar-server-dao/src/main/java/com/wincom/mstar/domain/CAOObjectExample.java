package com.wincom.mstar.domain;

import java.util.ArrayList;
import java.util.List;

public class CAOObjectExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table nfjd502.dbo.CAOObject
     *
     * @mbggenerated Thu Mar 02 11:23:21 CST 2017
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table nfjd502.dbo.CAOObject
     *
     * @mbggenerated Thu Mar 02 11:23:21 CST 2017
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table nfjd502.dbo.CAOObject
     *
     * @mbggenerated Thu Mar 02 11:23:21 CST 2017
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table nfjd502.dbo.CAOObject
     *
     * @mbggenerated Thu Mar 02 11:23:21 CST 2017
     */
    public CAOObjectExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table nfjd502.dbo.CAOObject
     *
     * @mbggenerated Thu Mar 02 11:23:21 CST 2017
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table nfjd502.dbo.CAOObject
     *
     * @mbggenerated Thu Mar 02 11:23:21 CST 2017
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table nfjd502.dbo.CAOObject
     *
     * @mbggenerated Thu Mar 02 11:23:21 CST 2017
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table nfjd502.dbo.CAOObject
     *
     * @mbggenerated Thu Mar 02 11:23:21 CST 2017
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table nfjd502.dbo.CAOObject
     *
     * @mbggenerated Thu Mar 02 11:23:21 CST 2017
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table nfjd502.dbo.CAOObject
     *
     * @mbggenerated Thu Mar 02 11:23:21 CST 2017
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table nfjd502.dbo.CAOObject
     *
     * @mbggenerated Thu Mar 02 11:23:21 CST 2017
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table nfjd502.dbo.CAOObject
     *
     * @mbggenerated Thu Mar 02 11:23:21 CST 2017
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table nfjd502.dbo.CAOObject
     *
     * @mbggenerated Thu Mar 02 11:23:21 CST 2017
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table nfjd502.dbo.CAOObject
     *
     * @mbggenerated Thu Mar 02 11:23:21 CST 2017
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table nfjd502.dbo.CAOObject
     *
     * @mbggenerated Thu Mar 02 11:23:21 CST 2017
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andAoobjidIsNull() {
            addCriterion("AOObjID is null");
            return (Criteria) this;
        }

        public Criteria andAoobjidIsNotNull() {
            addCriterion("AOObjID is not null");
            return (Criteria) this;
        }

        public Criteria andAoobjidEqualTo(Integer value) {
            addCriterion("AOObjID =", value, "aoobjid");
            return (Criteria) this;
        }

        public Criteria andAoobjidNotEqualTo(Integer value) {
            addCriterion("AOObjID <>", value, "aoobjid");
            return (Criteria) this;
        }

        public Criteria andAoobjidGreaterThan(Integer value) {
            addCriterion("AOObjID >", value, "aoobjid");
            return (Criteria) this;
        }

        public Criteria andAoobjidGreaterThanOrEqualTo(Integer value) {
            addCriterion("AOObjID >=", value, "aoobjid");
            return (Criteria) this;
        }

        public Criteria andAoobjidLessThan(Integer value) {
            addCriterion("AOObjID <", value, "aoobjid");
            return (Criteria) this;
        }

        public Criteria andAoobjidLessThanOrEqualTo(Integer value) {
            addCriterion("AOObjID <=", value, "aoobjid");
            return (Criteria) this;
        }

        public Criteria andAoobjidIn(List<Integer> values) {
            addCriterion("AOObjID in", values, "aoobjid");
            return (Criteria) this;
        }

        public Criteria andAoobjidNotIn(List<Integer> values) {
            addCriterion("AOObjID not in", values, "aoobjid");
            return (Criteria) this;
        }

        public Criteria andAoobjidBetween(Integer value1, Integer value2) {
            addCriterion("AOObjID between", value1, value2, "aoobjid");
            return (Criteria) this;
        }

        public Criteria andAoobjidNotBetween(Integer value1, Integer value2) {
            addCriterion("AOObjID not between", value1, value2, "aoobjid");
            return (Criteria) this;
        }

        public Criteria andBmaxvalIsNull() {
            addCriterion("bMaxVal is null");
            return (Criteria) this;
        }

        public Criteria andBmaxvalIsNotNull() {
            addCriterion("bMaxVal is not null");
            return (Criteria) this;
        }

        public Criteria andBmaxvalEqualTo(Boolean value) {
            addCriterion("bMaxVal =", value, "bmaxval");
            return (Criteria) this;
        }

        public Criteria andBmaxvalNotEqualTo(Boolean value) {
            addCriterion("bMaxVal <>", value, "bmaxval");
            return (Criteria) this;
        }

        public Criteria andBmaxvalGreaterThan(Boolean value) {
            addCriterion("bMaxVal >", value, "bmaxval");
            return (Criteria) this;
        }

        public Criteria andBmaxvalGreaterThanOrEqualTo(Boolean value) {
            addCriterion("bMaxVal >=", value, "bmaxval");
            return (Criteria) this;
        }

        public Criteria andBmaxvalLessThan(Boolean value) {
            addCriterion("bMaxVal <", value, "bmaxval");
            return (Criteria) this;
        }

        public Criteria andBmaxvalLessThanOrEqualTo(Boolean value) {
            addCriterion("bMaxVal <=", value, "bmaxval");
            return (Criteria) this;
        }

        public Criteria andBmaxvalIn(List<Boolean> values) {
            addCriterion("bMaxVal in", values, "bmaxval");
            return (Criteria) this;
        }

        public Criteria andBmaxvalNotIn(List<Boolean> values) {
            addCriterion("bMaxVal not in", values, "bmaxval");
            return (Criteria) this;
        }

        public Criteria andBmaxvalBetween(Boolean value1, Boolean value2) {
            addCriterion("bMaxVal between", value1, value2, "bmaxval");
            return (Criteria) this;
        }

        public Criteria andBmaxvalNotBetween(Boolean value1, Boolean value2) {
            addCriterion("bMaxVal not between", value1, value2, "bmaxval");
            return (Criteria) this;
        }

        public Criteria andBminvalIsNull() {
            addCriterion("bMinVal is null");
            return (Criteria) this;
        }

        public Criteria andBminvalIsNotNull() {
            addCriterion("bMinVal is not null");
            return (Criteria) this;
        }

        public Criteria andBminvalEqualTo(Boolean value) {
            addCriterion("bMinVal =", value, "bminval");
            return (Criteria) this;
        }

        public Criteria andBminvalNotEqualTo(Boolean value) {
            addCriterion("bMinVal <>", value, "bminval");
            return (Criteria) this;
        }

        public Criteria andBminvalGreaterThan(Boolean value) {
            addCriterion("bMinVal >", value, "bminval");
            return (Criteria) this;
        }

        public Criteria andBminvalGreaterThanOrEqualTo(Boolean value) {
            addCriterion("bMinVal >=", value, "bminval");
            return (Criteria) this;
        }

        public Criteria andBminvalLessThan(Boolean value) {
            addCriterion("bMinVal <", value, "bminval");
            return (Criteria) this;
        }

        public Criteria andBminvalLessThanOrEqualTo(Boolean value) {
            addCriterion("bMinVal <=", value, "bminval");
            return (Criteria) this;
        }

        public Criteria andBminvalIn(List<Boolean> values) {
            addCriterion("bMinVal in", values, "bminval");
            return (Criteria) this;
        }

        public Criteria andBminvalNotIn(List<Boolean> values) {
            addCriterion("bMinVal not in", values, "bminval");
            return (Criteria) this;
        }

        public Criteria andBminvalBetween(Boolean value1, Boolean value2) {
            addCriterion("bMinVal between", value1, value2, "bminval");
            return (Criteria) this;
        }

        public Criteria andBminvalNotBetween(Boolean value1, Boolean value2) {
            addCriterion("bMinVal not between", value1, value2, "bminval");
            return (Criteria) this;
        }

        public Criteria andMaxvalIsNull() {
            addCriterion("MaxVal is null");
            return (Criteria) this;
        }

        public Criteria andMaxvalIsNotNull() {
            addCriterion("MaxVal is not null");
            return (Criteria) this;
        }

        public Criteria andMaxvalEqualTo(Float value) {
            addCriterion("MaxVal =", value, "maxval");
            return (Criteria) this;
        }

        public Criteria andMaxvalNotEqualTo(Float value) {
            addCriterion("MaxVal <>", value, "maxval");
            return (Criteria) this;
        }

        public Criteria andMaxvalGreaterThan(Float value) {
            addCriterion("MaxVal >", value, "maxval");
            return (Criteria) this;
        }

        public Criteria andMaxvalGreaterThanOrEqualTo(Float value) {
            addCriterion("MaxVal >=", value, "maxval");
            return (Criteria) this;
        }

        public Criteria andMaxvalLessThan(Float value) {
            addCriterion("MaxVal <", value, "maxval");
            return (Criteria) this;
        }

        public Criteria andMaxvalLessThanOrEqualTo(Float value) {
            addCriterion("MaxVal <=", value, "maxval");
            return (Criteria) this;
        }

        public Criteria andMaxvalIn(List<Float> values) {
            addCriterion("MaxVal in", values, "maxval");
            return (Criteria) this;
        }

        public Criteria andMaxvalNotIn(List<Float> values) {
            addCriterion("MaxVal not in", values, "maxval");
            return (Criteria) this;
        }

        public Criteria andMaxvalBetween(Float value1, Float value2) {
            addCriterion("MaxVal between", value1, value2, "maxval");
            return (Criteria) this;
        }

        public Criteria andMaxvalNotBetween(Float value1, Float value2) {
            addCriterion("MaxVal not between", value1, value2, "maxval");
            return (Criteria) this;
        }

        public Criteria andMinvalIsNull() {
            addCriterion("MinVal is null");
            return (Criteria) this;
        }

        public Criteria andMinvalIsNotNull() {
            addCriterion("MinVal is not null");
            return (Criteria) this;
        }

        public Criteria andMinvalEqualTo(Float value) {
            addCriterion("MinVal =", value, "minval");
            return (Criteria) this;
        }

        public Criteria andMinvalNotEqualTo(Float value) {
            addCriterion("MinVal <>", value, "minval");
            return (Criteria) this;
        }

        public Criteria andMinvalGreaterThan(Float value) {
            addCriterion("MinVal >", value, "minval");
            return (Criteria) this;
        }

        public Criteria andMinvalGreaterThanOrEqualTo(Float value) {
            addCriterion("MinVal >=", value, "minval");
            return (Criteria) this;
        }

        public Criteria andMinvalLessThan(Float value) {
            addCriterion("MinVal <", value, "minval");
            return (Criteria) this;
        }

        public Criteria andMinvalLessThanOrEqualTo(Float value) {
            addCriterion("MinVal <=", value, "minval");
            return (Criteria) this;
        }

        public Criteria andMinvalIn(List<Float> values) {
            addCriterion("MinVal in", values, "minval");
            return (Criteria) this;
        }

        public Criteria andMinvalNotIn(List<Float> values) {
            addCriterion("MinVal not in", values, "minval");
            return (Criteria) this;
        }

        public Criteria andMinvalBetween(Float value1, Float value2) {
            addCriterion("MinVal between", value1, value2, "minval");
            return (Criteria) this;
        }

        public Criteria andMinvalNotBetween(Float value1, Float value2) {
            addCriterion("MinVal not between", value1, value2, "minval");
            return (Criteria) this;
        }

        public Criteria andMeasuremonadIsNull() {
            addCriterion("MeasureMonad is null");
            return (Criteria) this;
        }

        public Criteria andMeasuremonadIsNotNull() {
            addCriterion("MeasureMonad is not null");
            return (Criteria) this;
        }

        public Criteria andMeasuremonadEqualTo(String value) {
            addCriterion("MeasureMonad =", value, "measuremonad");
            return (Criteria) this;
        }

        public Criteria andMeasuremonadNotEqualTo(String value) {
            addCriterion("MeasureMonad <>", value, "measuremonad");
            return (Criteria) this;
        }

        public Criteria andMeasuremonadGreaterThan(String value) {
            addCriterion("MeasureMonad >", value, "measuremonad");
            return (Criteria) this;
        }

        public Criteria andMeasuremonadGreaterThanOrEqualTo(String value) {
            addCriterion("MeasureMonad >=", value, "measuremonad");
            return (Criteria) this;
        }

        public Criteria andMeasuremonadLessThan(String value) {
            addCriterion("MeasureMonad <", value, "measuremonad");
            return (Criteria) this;
        }

        public Criteria andMeasuremonadLessThanOrEqualTo(String value) {
            addCriterion("MeasureMonad <=", value, "measuremonad");
            return (Criteria) this;
        }

        public Criteria andMeasuremonadLike(String value) {
            addCriterion("MeasureMonad like", value, "measuremonad");
            return (Criteria) this;
        }

        public Criteria andMeasuremonadNotLike(String value) {
            addCriterion("MeasureMonad not like", value, "measuremonad");
            return (Criteria) this;
        }

        public Criteria andMeasuremonadIn(List<String> values) {
            addCriterion("MeasureMonad in", values, "measuremonad");
            return (Criteria) this;
        }

        public Criteria andMeasuremonadNotIn(List<String> values) {
            addCriterion("MeasureMonad not in", values, "measuremonad");
            return (Criteria) this;
        }

        public Criteria andMeasuremonadBetween(String value1, String value2) {
            addCriterion("MeasureMonad between", value1, value2, "measuremonad");
            return (Criteria) this;
        }

        public Criteria andMeasuremonadNotBetween(String value1, String value2) {
            addCriterion("MeasureMonad not between", value1, value2, "measuremonad");
            return (Criteria) this;
        }

        public Criteria andAiprecisionIsNull() {
            addCriterion("AIprecision is null");
            return (Criteria) this;
        }

        public Criteria andAiprecisionIsNotNull() {
            addCriterion("AIprecision is not null");
            return (Criteria) this;
        }

        public Criteria andAiprecisionEqualTo(Byte value) {
            addCriterion("AIprecision =", value, "aiprecision");
            return (Criteria) this;
        }

        public Criteria andAiprecisionNotEqualTo(Byte value) {
            addCriterion("AIprecision <>", value, "aiprecision");
            return (Criteria) this;
        }

        public Criteria andAiprecisionGreaterThan(Byte value) {
            addCriterion("AIprecision >", value, "aiprecision");
            return (Criteria) this;
        }

        public Criteria andAiprecisionGreaterThanOrEqualTo(Byte value) {
            addCriterion("AIprecision >=", value, "aiprecision");
            return (Criteria) this;
        }

        public Criteria andAiprecisionLessThan(Byte value) {
            addCriterion("AIprecision <", value, "aiprecision");
            return (Criteria) this;
        }

        public Criteria andAiprecisionLessThanOrEqualTo(Byte value) {
            addCriterion("AIprecision <=", value, "aiprecision");
            return (Criteria) this;
        }

        public Criteria andAiprecisionIn(List<Byte> values) {
            addCriterion("AIprecision in", values, "aiprecision");
            return (Criteria) this;
        }

        public Criteria andAiprecisionNotIn(List<Byte> values) {
            addCriterion("AIprecision not in", values, "aiprecision");
            return (Criteria) this;
        }

        public Criteria andAiprecisionBetween(Byte value1, Byte value2) {
            addCriterion("AIprecision between", value1, value2, "aiprecision");
            return (Criteria) this;
        }

        public Criteria andAiprecisionNotBetween(Byte value1, Byte value2) {
            addCriterion("AIprecision not between", value1, value2, "aiprecision");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table nfjd502.dbo.CAOObject
     *
     * @mbggenerated do_not_delete_during_merge Thu Mar 02 11:23:21 CST 2017
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table nfjd502.dbo.CAOObject
     *
     * @mbggenerated Thu Mar 02 11:23:21 CST 2017
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}