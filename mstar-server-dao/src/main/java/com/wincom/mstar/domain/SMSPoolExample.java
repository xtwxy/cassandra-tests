package com.wincom.mstar.domain;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class SMSPoolExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table nfjd502.dbo.SMSPool
     *
     * @mbggenerated Thu Mar 02 11:23:21 CST 2017
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table nfjd502.dbo.SMSPool
     *
     * @mbggenerated Thu Mar 02 11:23:21 CST 2017
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table nfjd502.dbo.SMSPool
     *
     * @mbggenerated Thu Mar 02 11:23:21 CST 2017
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table nfjd502.dbo.SMSPool
     *
     * @mbggenerated Thu Mar 02 11:23:21 CST 2017
     */
    public SMSPoolExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table nfjd502.dbo.SMSPool
     *
     * @mbggenerated Thu Mar 02 11:23:21 CST 2017
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table nfjd502.dbo.SMSPool
     *
     * @mbggenerated Thu Mar 02 11:23:21 CST 2017
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table nfjd502.dbo.SMSPool
     *
     * @mbggenerated Thu Mar 02 11:23:21 CST 2017
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table nfjd502.dbo.SMSPool
     *
     * @mbggenerated Thu Mar 02 11:23:21 CST 2017
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table nfjd502.dbo.SMSPool
     *
     * @mbggenerated Thu Mar 02 11:23:21 CST 2017
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table nfjd502.dbo.SMSPool
     *
     * @mbggenerated Thu Mar 02 11:23:21 CST 2017
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table nfjd502.dbo.SMSPool
     *
     * @mbggenerated Thu Mar 02 11:23:21 CST 2017
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table nfjd502.dbo.SMSPool
     *
     * @mbggenerated Thu Mar 02 11:23:21 CST 2017
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table nfjd502.dbo.SMSPool
     *
     * @mbggenerated Thu Mar 02 11:23:21 CST 2017
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table nfjd502.dbo.SMSPool
     *
     * @mbggenerated Thu Mar 02 11:23:21 CST 2017
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table nfjd502.dbo.SMSPool
     *
     * @mbggenerated Thu Mar 02 11:23:21 CST 2017
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("ID is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("ID is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("ID =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("ID <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("ID >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("ID >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("ID <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("ID <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("ID in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("ID not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("ID between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("ID not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andSmstextIsNull() {
            addCriterion("SMSText is null");
            return (Criteria) this;
        }

        public Criteria andSmstextIsNotNull() {
            addCriterion("SMSText is not null");
            return (Criteria) this;
        }

        public Criteria andSmstextEqualTo(String value) {
            addCriterion("SMSText =", value, "smstext");
            return (Criteria) this;
        }

        public Criteria andSmstextNotEqualTo(String value) {
            addCriterion("SMSText <>", value, "smstext");
            return (Criteria) this;
        }

        public Criteria andSmstextGreaterThan(String value) {
            addCriterion("SMSText >", value, "smstext");
            return (Criteria) this;
        }

        public Criteria andSmstextGreaterThanOrEqualTo(String value) {
            addCriterion("SMSText >=", value, "smstext");
            return (Criteria) this;
        }

        public Criteria andSmstextLessThan(String value) {
            addCriterion("SMSText <", value, "smstext");
            return (Criteria) this;
        }

        public Criteria andSmstextLessThanOrEqualTo(String value) {
            addCriterion("SMSText <=", value, "smstext");
            return (Criteria) this;
        }

        public Criteria andSmstextLike(String value) {
            addCriterion("SMSText like", value, "smstext");
            return (Criteria) this;
        }

        public Criteria andSmstextNotLike(String value) {
            addCriterion("SMSText not like", value, "smstext");
            return (Criteria) this;
        }

        public Criteria andSmstextIn(List<String> values) {
            addCriterion("SMSText in", values, "smstext");
            return (Criteria) this;
        }

        public Criteria andSmstextNotIn(List<String> values) {
            addCriterion("SMSText not in", values, "smstext");
            return (Criteria) this;
        }

        public Criteria andSmstextBetween(String value1, String value2) {
            addCriterion("SMSText between", value1, value2, "smstext");
            return (Criteria) this;
        }

        public Criteria andSmstextNotBetween(String value1, String value2) {
            addCriterion("SMSText not between", value1, value2, "smstext");
            return (Criteria) this;
        }

        public Criteria andSendtoIsNull() {
            addCriterion("SendTo is null");
            return (Criteria) this;
        }

        public Criteria andSendtoIsNotNull() {
            addCriterion("SendTo is not null");
            return (Criteria) this;
        }

        public Criteria andSendtoEqualTo(String value) {
            addCriterion("SendTo =", value, "sendto");
            return (Criteria) this;
        }

        public Criteria andSendtoNotEqualTo(String value) {
            addCriterion("SendTo <>", value, "sendto");
            return (Criteria) this;
        }

        public Criteria andSendtoGreaterThan(String value) {
            addCriterion("SendTo >", value, "sendto");
            return (Criteria) this;
        }

        public Criteria andSendtoGreaterThanOrEqualTo(String value) {
            addCriterion("SendTo >=", value, "sendto");
            return (Criteria) this;
        }

        public Criteria andSendtoLessThan(String value) {
            addCriterion("SendTo <", value, "sendto");
            return (Criteria) this;
        }

        public Criteria andSendtoLessThanOrEqualTo(String value) {
            addCriterion("SendTo <=", value, "sendto");
            return (Criteria) this;
        }

        public Criteria andSendtoLike(String value) {
            addCriterion("SendTo like", value, "sendto");
            return (Criteria) this;
        }

        public Criteria andSendtoNotLike(String value) {
            addCriterion("SendTo not like", value, "sendto");
            return (Criteria) this;
        }

        public Criteria andSendtoIn(List<String> values) {
            addCriterion("SendTo in", values, "sendto");
            return (Criteria) this;
        }

        public Criteria andSendtoNotIn(List<String> values) {
            addCriterion("SendTo not in", values, "sendto");
            return (Criteria) this;
        }

        public Criteria andSendtoBetween(String value1, String value2) {
            addCriterion("SendTo between", value1, value2, "sendto");
            return (Criteria) this;
        }

        public Criteria andSendtoNotBetween(String value1, String value2) {
            addCriterion("SendTo not between", value1, value2, "sendto");
            return (Criteria) this;
        }

        public Criteria andBsendresumeIsNull() {
            addCriterion("bSendResume is null");
            return (Criteria) this;
        }

        public Criteria andBsendresumeIsNotNull() {
            addCriterion("bSendResume is not null");
            return (Criteria) this;
        }

        public Criteria andBsendresumeEqualTo(Boolean value) {
            addCriterion("bSendResume =", value, "bsendresume");
            return (Criteria) this;
        }

        public Criteria andBsendresumeNotEqualTo(Boolean value) {
            addCriterion("bSendResume <>", value, "bsendresume");
            return (Criteria) this;
        }

        public Criteria andBsendresumeGreaterThan(Boolean value) {
            addCriterion("bSendResume >", value, "bsendresume");
            return (Criteria) this;
        }

        public Criteria andBsendresumeGreaterThanOrEqualTo(Boolean value) {
            addCriterion("bSendResume >=", value, "bsendresume");
            return (Criteria) this;
        }

        public Criteria andBsendresumeLessThan(Boolean value) {
            addCriterion("bSendResume <", value, "bsendresume");
            return (Criteria) this;
        }

        public Criteria andBsendresumeLessThanOrEqualTo(Boolean value) {
            addCriterion("bSendResume <=", value, "bsendresume");
            return (Criteria) this;
        }

        public Criteria andBsendresumeIn(List<Boolean> values) {
            addCriterion("bSendResume in", values, "bsendresume");
            return (Criteria) this;
        }

        public Criteria andBsendresumeNotIn(List<Boolean> values) {
            addCriterion("bSendResume not in", values, "bsendresume");
            return (Criteria) this;
        }

        public Criteria andBsendresumeBetween(Boolean value1, Boolean value2) {
            addCriterion("bSendResume between", value1, value2, "bsendresume");
            return (Criteria) this;
        }

        public Criteria andBsendresumeNotBetween(Boolean value1, Boolean value2) {
            addCriterion("bSendResume not between", value1, value2, "bsendresume");
            return (Criteria) this;
        }

        public Criteria andBallsendIsNull() {
            addCriterion("bAllSend is null");
            return (Criteria) this;
        }

        public Criteria andBallsendIsNotNull() {
            addCriterion("bAllSend is not null");
            return (Criteria) this;
        }

        public Criteria andBallsendEqualTo(Boolean value) {
            addCriterion("bAllSend =", value, "ballsend");
            return (Criteria) this;
        }

        public Criteria andBallsendNotEqualTo(Boolean value) {
            addCriterion("bAllSend <>", value, "ballsend");
            return (Criteria) this;
        }

        public Criteria andBallsendGreaterThan(Boolean value) {
            addCriterion("bAllSend >", value, "ballsend");
            return (Criteria) this;
        }

        public Criteria andBallsendGreaterThanOrEqualTo(Boolean value) {
            addCriterion("bAllSend >=", value, "ballsend");
            return (Criteria) this;
        }

        public Criteria andBallsendLessThan(Boolean value) {
            addCriterion("bAllSend <", value, "ballsend");
            return (Criteria) this;
        }

        public Criteria andBallsendLessThanOrEqualTo(Boolean value) {
            addCriterion("bAllSend <=", value, "ballsend");
            return (Criteria) this;
        }

        public Criteria andBallsendIn(List<Boolean> values) {
            addCriterion("bAllSend in", values, "ballsend");
            return (Criteria) this;
        }

        public Criteria andBallsendNotIn(List<Boolean> values) {
            addCriterion("bAllSend not in", values, "ballsend");
            return (Criteria) this;
        }

        public Criteria andBallsendBetween(Boolean value1, Boolean value2) {
            addCriterion("bAllSend between", value1, value2, "ballsend");
            return (Criteria) this;
        }

        public Criteria andBallsendNotBetween(Boolean value1, Boolean value2) {
            addCriterion("bAllSend not between", value1, value2, "ballsend");
            return (Criteria) this;
        }

        public Criteria andStarttimeIsNull() {
            addCriterion("StartTime is null");
            return (Criteria) this;
        }

        public Criteria andStarttimeIsNotNull() {
            addCriterion("StartTime is not null");
            return (Criteria) this;
        }

        public Criteria andStarttimeEqualTo(Date value) {
            addCriterion("StartTime =", value, "starttime");
            return (Criteria) this;
        }

        public Criteria andStarttimeNotEqualTo(Date value) {
            addCriterion("StartTime <>", value, "starttime");
            return (Criteria) this;
        }

        public Criteria andStarttimeGreaterThan(Date value) {
            addCriterion("StartTime >", value, "starttime");
            return (Criteria) this;
        }

        public Criteria andStarttimeGreaterThanOrEqualTo(Date value) {
            addCriterion("StartTime >=", value, "starttime");
            return (Criteria) this;
        }

        public Criteria andStarttimeLessThan(Date value) {
            addCriterion("StartTime <", value, "starttime");
            return (Criteria) this;
        }

        public Criteria andStarttimeLessThanOrEqualTo(Date value) {
            addCriterion("StartTime <=", value, "starttime");
            return (Criteria) this;
        }

        public Criteria andStarttimeIn(List<Date> values) {
            addCriterion("StartTime in", values, "starttime");
            return (Criteria) this;
        }

        public Criteria andStarttimeNotIn(List<Date> values) {
            addCriterion("StartTime not in", values, "starttime");
            return (Criteria) this;
        }

        public Criteria andStarttimeBetween(Date value1, Date value2) {
            addCriterion("StartTime between", value1, value2, "starttime");
            return (Criteria) this;
        }

        public Criteria andStarttimeNotBetween(Date value1, Date value2) {
            addCriterion("StartTime not between", value1, value2, "starttime");
            return (Criteria) this;
        }

        public Criteria andEndtimeIsNull() {
            addCriterion("EndTime is null");
            return (Criteria) this;
        }

        public Criteria andEndtimeIsNotNull() {
            addCriterion("EndTime is not null");
            return (Criteria) this;
        }

        public Criteria andEndtimeEqualTo(Date value) {
            addCriterion("EndTime =", value, "endtime");
            return (Criteria) this;
        }

        public Criteria andEndtimeNotEqualTo(Date value) {
            addCriterion("EndTime <>", value, "endtime");
            return (Criteria) this;
        }

        public Criteria andEndtimeGreaterThan(Date value) {
            addCriterion("EndTime >", value, "endtime");
            return (Criteria) this;
        }

        public Criteria andEndtimeGreaterThanOrEqualTo(Date value) {
            addCriterion("EndTime >=", value, "endtime");
            return (Criteria) this;
        }

        public Criteria andEndtimeLessThan(Date value) {
            addCriterion("EndTime <", value, "endtime");
            return (Criteria) this;
        }

        public Criteria andEndtimeLessThanOrEqualTo(Date value) {
            addCriterion("EndTime <=", value, "endtime");
            return (Criteria) this;
        }

        public Criteria andEndtimeIn(List<Date> values) {
            addCriterion("EndTime in", values, "endtime");
            return (Criteria) this;
        }

        public Criteria andEndtimeNotIn(List<Date> values) {
            addCriterion("EndTime not in", values, "endtime");
            return (Criteria) this;
        }

        public Criteria andEndtimeBetween(Date value1, Date value2) {
            addCriterion("EndTime between", value1, value2, "endtime");
            return (Criteria) this;
        }

        public Criteria andEndtimeNotBetween(Date value1, Date value2) {
            addCriterion("EndTime not between", value1, value2, "endtime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table nfjd502.dbo.SMSPool
     *
     * @mbggenerated do_not_delete_during_merge Thu Mar 02 11:23:21 CST 2017
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table nfjd502.dbo.SMSPool
     *
     * @mbggenerated Thu Mar 02 11:23:21 CST 2017
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}