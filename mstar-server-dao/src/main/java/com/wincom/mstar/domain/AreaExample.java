package com.wincom.mstar.domain;

import java.util.ArrayList;
import java.util.List;

public class AreaExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table Energy.dbo.Area
     *
     * @mbggenerated Thu Mar 02 11:23:21 CST 2017
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table Energy.dbo.Area
     *
     * @mbggenerated Thu Mar 02 11:23:21 CST 2017
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table Energy.dbo.Area
     *
     * @mbggenerated Thu Mar 02 11:23:21 CST 2017
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Energy.dbo.Area
     *
     * @mbggenerated Thu Mar 02 11:23:21 CST 2017
     */
    public AreaExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Energy.dbo.Area
     *
     * @mbggenerated Thu Mar 02 11:23:21 CST 2017
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Energy.dbo.Area
     *
     * @mbggenerated Thu Mar 02 11:23:21 CST 2017
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Energy.dbo.Area
     *
     * @mbggenerated Thu Mar 02 11:23:21 CST 2017
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Energy.dbo.Area
     *
     * @mbggenerated Thu Mar 02 11:23:21 CST 2017
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Energy.dbo.Area
     *
     * @mbggenerated Thu Mar 02 11:23:21 CST 2017
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Energy.dbo.Area
     *
     * @mbggenerated Thu Mar 02 11:23:21 CST 2017
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Energy.dbo.Area
     *
     * @mbggenerated Thu Mar 02 11:23:21 CST 2017
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Energy.dbo.Area
     *
     * @mbggenerated Thu Mar 02 11:23:21 CST 2017
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Energy.dbo.Area
     *
     * @mbggenerated Thu Mar 02 11:23:21 CST 2017
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Energy.dbo.Area
     *
     * @mbggenerated Thu Mar 02 11:23:21 CST 2017
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table Energy.dbo.Area
     *
     * @mbggenerated Thu Mar 02 11:23:21 CST 2017
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andAreaidIsNull() {
            addCriterion("AreaId is null");
            return (Criteria) this;
        }

        public Criteria andAreaidIsNotNull() {
            addCriterion("AreaId is not null");
            return (Criteria) this;
        }

        public Criteria andAreaidEqualTo(Integer value) {
            addCriterion("AreaId =", value, "areaid");
            return (Criteria) this;
        }

        public Criteria andAreaidNotEqualTo(Integer value) {
            addCriterion("AreaId <>", value, "areaid");
            return (Criteria) this;
        }

        public Criteria andAreaidGreaterThan(Integer value) {
            addCriterion("AreaId >", value, "areaid");
            return (Criteria) this;
        }

        public Criteria andAreaidGreaterThanOrEqualTo(Integer value) {
            addCriterion("AreaId >=", value, "areaid");
            return (Criteria) this;
        }

        public Criteria andAreaidLessThan(Integer value) {
            addCriterion("AreaId <", value, "areaid");
            return (Criteria) this;
        }

        public Criteria andAreaidLessThanOrEqualTo(Integer value) {
            addCriterion("AreaId <=", value, "areaid");
            return (Criteria) this;
        }

        public Criteria andAreaidIn(List<Integer> values) {
            addCriterion("AreaId in", values, "areaid");
            return (Criteria) this;
        }

        public Criteria andAreaidNotIn(List<Integer> values) {
            addCriterion("AreaId not in", values, "areaid");
            return (Criteria) this;
        }

        public Criteria andAreaidBetween(Integer value1, Integer value2) {
            addCriterion("AreaId between", value1, value2, "areaid");
            return (Criteria) this;
        }

        public Criteria andAreaidNotBetween(Integer value1, Integer value2) {
            addCriterion("AreaId not between", value1, value2, "areaid");
            return (Criteria) this;
        }

        public Criteria andTypeIsNull() {
            addCriterion("Type is null");
            return (Criteria) this;
        }

        public Criteria andTypeIsNotNull() {
            addCriterion("Type is not null");
            return (Criteria) this;
        }

        public Criteria andTypeEqualTo(Integer value) {
            addCriterion("Type =", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotEqualTo(Integer value) {
            addCriterion("Type <>", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeGreaterThan(Integer value) {
            addCriterion("Type >", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeGreaterThanOrEqualTo(Integer value) {
            addCriterion("Type >=", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeLessThan(Integer value) {
            addCriterion("Type <", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeLessThanOrEqualTo(Integer value) {
            addCriterion("Type <=", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeIn(List<Integer> values) {
            addCriterion("Type in", values, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotIn(List<Integer> values) {
            addCriterion("Type not in", values, "type");
            return (Criteria) this;
        }

        public Criteria andTypeBetween(Integer value1, Integer value2) {
            addCriterion("Type between", value1, value2, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotBetween(Integer value1, Integer value2) {
            addCriterion("Type not between", value1, value2, "type");
            return (Criteria) this;
        }

        public Criteria andAreatypeIsNull() {
            addCriterion("AreaType is null");
            return (Criteria) this;
        }

        public Criteria andAreatypeIsNotNull() {
            addCriterion("AreaType is not null");
            return (Criteria) this;
        }

        public Criteria andAreatypeEqualTo(Integer value) {
            addCriterion("AreaType =", value, "areatype");
            return (Criteria) this;
        }

        public Criteria andAreatypeNotEqualTo(Integer value) {
            addCriterion("AreaType <>", value, "areatype");
            return (Criteria) this;
        }

        public Criteria andAreatypeGreaterThan(Integer value) {
            addCriterion("AreaType >", value, "areatype");
            return (Criteria) this;
        }

        public Criteria andAreatypeGreaterThanOrEqualTo(Integer value) {
            addCriterion("AreaType >=", value, "areatype");
            return (Criteria) this;
        }

        public Criteria andAreatypeLessThan(Integer value) {
            addCriterion("AreaType <", value, "areatype");
            return (Criteria) this;
        }

        public Criteria andAreatypeLessThanOrEqualTo(Integer value) {
            addCriterion("AreaType <=", value, "areatype");
            return (Criteria) this;
        }

        public Criteria andAreatypeIn(List<Integer> values) {
            addCriterion("AreaType in", values, "areatype");
            return (Criteria) this;
        }

        public Criteria andAreatypeNotIn(List<Integer> values) {
            addCriterion("AreaType not in", values, "areatype");
            return (Criteria) this;
        }

        public Criteria andAreatypeBetween(Integer value1, Integer value2) {
            addCriterion("AreaType between", value1, value2, "areatype");
            return (Criteria) this;
        }

        public Criteria andAreatypeNotBetween(Integer value1, Integer value2) {
            addCriterion("AreaType not between", value1, value2, "areatype");
            return (Criteria) this;
        }

        public Criteria andAreanameIsNull() {
            addCriterion("AreaName is null");
            return (Criteria) this;
        }

        public Criteria andAreanameIsNotNull() {
            addCriterion("AreaName is not null");
            return (Criteria) this;
        }

        public Criteria andAreanameEqualTo(String value) {
            addCriterion("AreaName =", value, "areaname");
            return (Criteria) this;
        }

        public Criteria andAreanameNotEqualTo(String value) {
            addCriterion("AreaName <>", value, "areaname");
            return (Criteria) this;
        }

        public Criteria andAreanameGreaterThan(String value) {
            addCriterion("AreaName >", value, "areaname");
            return (Criteria) this;
        }

        public Criteria andAreanameGreaterThanOrEqualTo(String value) {
            addCriterion("AreaName >=", value, "areaname");
            return (Criteria) this;
        }

        public Criteria andAreanameLessThan(String value) {
            addCriterion("AreaName <", value, "areaname");
            return (Criteria) this;
        }

        public Criteria andAreanameLessThanOrEqualTo(String value) {
            addCriterion("AreaName <=", value, "areaname");
            return (Criteria) this;
        }

        public Criteria andAreanameLike(String value) {
            addCriterion("AreaName like", value, "areaname");
            return (Criteria) this;
        }

        public Criteria andAreanameNotLike(String value) {
            addCriterion("AreaName not like", value, "areaname");
            return (Criteria) this;
        }

        public Criteria andAreanameIn(List<String> values) {
            addCriterion("AreaName in", values, "areaname");
            return (Criteria) this;
        }

        public Criteria andAreanameNotIn(List<String> values) {
            addCriterion("AreaName not in", values, "areaname");
            return (Criteria) this;
        }

        public Criteria andAreanameBetween(String value1, String value2) {
            addCriterion("AreaName between", value1, value2, "areaname");
            return (Criteria) this;
        }

        public Criteria andAreanameNotBetween(String value1, String value2) {
            addCriterion("AreaName not between", value1, value2, "areaname");
            return (Criteria) this;
        }

        public Criteria andParareaidIsNull() {
            addCriterion("ParAreaId is null");
            return (Criteria) this;
        }

        public Criteria andParareaidIsNotNull() {
            addCriterion("ParAreaId is not null");
            return (Criteria) this;
        }

        public Criteria andParareaidEqualTo(Integer value) {
            addCriterion("ParAreaId =", value, "parareaid");
            return (Criteria) this;
        }

        public Criteria andParareaidNotEqualTo(Integer value) {
            addCriterion("ParAreaId <>", value, "parareaid");
            return (Criteria) this;
        }

        public Criteria andParareaidGreaterThan(Integer value) {
            addCriterion("ParAreaId >", value, "parareaid");
            return (Criteria) this;
        }

        public Criteria andParareaidGreaterThanOrEqualTo(Integer value) {
            addCriterion("ParAreaId >=", value, "parareaid");
            return (Criteria) this;
        }

        public Criteria andParareaidLessThan(Integer value) {
            addCriterion("ParAreaId <", value, "parareaid");
            return (Criteria) this;
        }

        public Criteria andParareaidLessThanOrEqualTo(Integer value) {
            addCriterion("ParAreaId <=", value, "parareaid");
            return (Criteria) this;
        }

        public Criteria andParareaidIn(List<Integer> values) {
            addCriterion("ParAreaId in", values, "parareaid");
            return (Criteria) this;
        }

        public Criteria andParareaidNotIn(List<Integer> values) {
            addCriterion("ParAreaId not in", values, "parareaid");
            return (Criteria) this;
        }

        public Criteria andParareaidBetween(Integer value1, Integer value2) {
            addCriterion("ParAreaId between", value1, value2, "parareaid");
            return (Criteria) this;
        }

        public Criteria andParareaidNotBetween(Integer value1, Integer value2) {
            addCriterion("ParAreaId not between", value1, value2, "parareaid");
            return (Criteria) this;
        }

        public Criteria andParareaid1IsNull() {
            addCriterion("ParAreaId1 is null");
            return (Criteria) this;
        }

        public Criteria andParareaid1IsNotNull() {
            addCriterion("ParAreaId1 is not null");
            return (Criteria) this;
        }

        public Criteria andParareaid1EqualTo(Integer value) {
            addCriterion("ParAreaId1 =", value, "parareaid1");
            return (Criteria) this;
        }

        public Criteria andParareaid1NotEqualTo(Integer value) {
            addCriterion("ParAreaId1 <>", value, "parareaid1");
            return (Criteria) this;
        }

        public Criteria andParareaid1GreaterThan(Integer value) {
            addCriterion("ParAreaId1 >", value, "parareaid1");
            return (Criteria) this;
        }

        public Criteria andParareaid1GreaterThanOrEqualTo(Integer value) {
            addCriterion("ParAreaId1 >=", value, "parareaid1");
            return (Criteria) this;
        }

        public Criteria andParareaid1LessThan(Integer value) {
            addCriterion("ParAreaId1 <", value, "parareaid1");
            return (Criteria) this;
        }

        public Criteria andParareaid1LessThanOrEqualTo(Integer value) {
            addCriterion("ParAreaId1 <=", value, "parareaid1");
            return (Criteria) this;
        }

        public Criteria andParareaid1In(List<Integer> values) {
            addCriterion("ParAreaId1 in", values, "parareaid1");
            return (Criteria) this;
        }

        public Criteria andParareaid1NotIn(List<Integer> values) {
            addCriterion("ParAreaId1 not in", values, "parareaid1");
            return (Criteria) this;
        }

        public Criteria andParareaid1Between(Integer value1, Integer value2) {
            addCriterion("ParAreaId1 between", value1, value2, "parareaid1");
            return (Criteria) this;
        }

        public Criteria andParareaid1NotBetween(Integer value1, Integer value2) {
            addCriterion("ParAreaId1 not between", value1, value2, "parareaid1");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table Energy.dbo.Area
     *
     * @mbggenerated do_not_delete_during_merge Thu Mar 02 11:23:21 CST 2017
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table Energy.dbo.Area
     *
     * @mbggenerated Thu Mar 02 11:23:21 CST 2017
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}